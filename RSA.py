import rsa

class RSA:
    def __init__(self):
        self.keys = ()
        self.publicKey = eval("rsa.PublicKey(93516916334788500833243927052476945774454751409321112272493289859233685548970956926344267272906298694191802723674080004496947513166198687284617258831558589786913451894219428333167602886264680384981221276198736024001847036477347034970692064371503488246963059938423228006815536391604843375451653026609012829597, 65537)")
        self.privateKey = eval("rsa.PrivateKey(93516916334788500833243927052476945774454751409321112272493289859233685548970956926344267272906298694191802723674080004496947513166198687284617258831558589786913451894219428333167602886264680384981221276198736024001847036477347034970692064371503488246963059938423228006815536391604843375451653026609012829597, 65537, 29848587147582371186197056106988613328502136044984955468147987202274291382171513450192553562333551369228132648333222538933230817407121841717192164352386199481665995808777169358665965898939050415660041439334358635874000911350715980325729467532147543017982077699775823199090342893016697940274418891252945358377, 45180046286725916013773107778278689073120565324272974844310409260922400133149592388442511403373511708897597609520768103391414075832305952336879157081673060926763123, 2069872078955000022875998211304132195121939400432930024541479476557723303792033216833370001238462307209907646301170477282626337377029231981278639)")
    
    def get_new_key(self):
        self.bits = int(input("how many bits ? "))
        self.keys = rsa.newkeys(self.bits)
        self.publicKey = self.keys[0]
        self.privateKey = self.keys[1]
        return self.keys
    
    def getPublicKey(self):
        return "rsa." + str(self.publicKey)
    def getPrivateKey(self):
        return "rsa." + str(self.privateKey)
    
    def selectPublicKey(self):
        self.key = input("enter your PublicKey (rsa.PublicKey(....)): ")
        self.publicKey = eval(self.key)
    def selectPrivateKey(self):
        self.key = input("enter your PrivateKey (rsa.PrivateKey(....)): ")
        self.privateKey = eval(self.key)

    def encrypt(self):
        self.message = input("enter your message: ")
        
        self.message = self.message.encode("utf-8")
        
        self.EncryptedMessage = str(rsa.encrypt(self.message, self.publicKey))[2:-1]
        
        return self.EncryptedMessage
    
    def decrypt(self):
        self.message = bytes(input("enter your encrypted message: "),'ISO-8859-1').decode('unicode_escape').encode('ISO-8859-1')
        self.DecryptedMessage = rsa.decrypt(self.message, self.privateKey)
        return str(self.DecryptedMessage)[2:-1]
    
